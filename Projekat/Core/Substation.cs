///////////////////////////////////////////////////////////
//  Substation.cs
//  Implementation of the Class Substation
//  Generated by Enterprise Architect
//  Created on:      09-Jul-2016 12:00:26 AM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using CIM.IEC61970.Base.Core;
using Projekat;

namespace CIM.IEC61970.Base.Core {
	/// <summary>
	/// A collection of equipment for purposes other than generation or utilization,
	/// through which electric energy in bulk is passed for the purposes of switching
	/// or modifying its characteristics.
	/// </summary>
	public class Substation : EquipmentContainer, IPrototype {

        public double x { get; set; }
        public double y { get; set; }
        /// <summary>
        /// The voltage levels within this substation.
        /// </summary>
        public List<VoltageLevel> VoltageLevels;
		/// <summary>
		/// Bays contained in the substation.
		/// </summary>
		public List<Bay> Bays;

		public Substation(){
            VoltageLevels = new List<VoltageLevel>();
            Bays = new List<Bay>();
		}

        public Substation(string id)
        {
            this.mRID = id;
        }

		~Substation(){

		}

        public object Clone()
        {
            Substation s = new Substation();

            foreach (Substation sub in Singleton.Instance().Substations)
            {
                if (sub.mRID.Equals(this.mRID))
                {
                    s.aliasName = sub.aliasName;
                    s.description = "clone_" + sub.mRID;
                    s.name = sub.name;
                    s.connectivityNodes = new List<ConnectivityNode>();
                    s.Bays = new List<Bay>(sub.Bays);
                    s.Equipments = new List<Equipment>(sub.Equipments);
                    s.VoltageLevels = new List<VoltageLevel>(sub.VoltageLevels);
                    s.x = -1;
                    s.y = -1;

                    break;
                }
            }

            return s;
        }

        public override string ToString()
        {
            return "id: " + mRID + ", name: " + name;
        }

    }//end Substation

}//end namespace Core