///////////////////////////////////////////////////////////
//  Terminal.cs
//  Implementation of the Class Terminal
//  Generated by Enterprise Architect
//  Created on:      09-Jul-2016 12:00:26 AM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using CIM.IEC61970.Base.Core;
using System.Xml.Serialization;

namespace CIM.IEC61970.Base.Core {
    /// <summary>
    /// An AC electrical connection point to a piece of conducting equipment. Terminals
    /// are connected at physical connection points called connectivity nodes.
    /// </summary>
    [XmlInclude(typeof(ConnectivityNode))]
    [XmlInclude(typeof(ConductingEquipment))]
    public class Terminal : ACDCTerminal {

		/// <summary>
		/// Represents the normal network phasing condition.
		/// If the attribute is missing three phases (ABC or ABCN) shall be assumed.
		/// </summary>
		public PhaseCode phases;
		/// <summary>
		/// The connectivity node to which this terminal connects with zero impedance.
		/// </summary>
		public CIM.IEC61970.Base.Core.ConnectivityNode ConnectivityNode;
		/// <summary>
		/// The conducting equipment of the terminal.  Conducting equipment have  terminals
		/// that may be connected to other conducting equipment terminals via connectivity
		/// nodes or topological nodes.
		/// </summary>
		public CIM.IEC61970.Base.Core.ConductingEquipment ConductingEquipment;

		public Terminal(){

		}

		~Terminal(){

		}

	}//end Terminal

}//end namespace Core