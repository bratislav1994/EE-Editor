///////////////////////////////////////////////////////////
//  Disconnector.cs
//  Implementation of the Class Disconnector
//  Generated by Enterprise Architect
//  Created on:      09-Jul-2016 12:00:49 AM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using CIM.IEC61970.Base.Wires;
using Projekat;
using CIM.IEC61970.Base.Core;

namespace CIM.IEC61970.Base.Wires {
	/// <summary>
	/// A manually operated or motor operated mechanical switching device used for
	/// changing the connections in a circuit, or for isolating a circuit or equipment
	/// from a source of power. It is required to open or close circuits when
	/// negligible current is broken or made.
	/// </summary>
	public class Disconnector : Switch, IPrototype {

        public string substationID
        {
            get; set;
        }

		public Disconnector(){

		}

        public Disconnector(string id)
        {
            this.mRID = id;
        }

		~Disconnector(){

		}

        public object Clone()
        {
            Disconnector d = new Disconnector();

            foreach (Disconnector l in Singleton.Instance().Disconnectors)
            {
                if (l.mRID.Equals(this.mRID))
                {
                    d.aliasName = l.aliasName;
                    d.description = "clone_" + l.mRID;
                    d.name = l.name;
                    d.normalOpen = l.normalOpen;
                    d.open = l.open;
                    d.ratedCurrent = l.ratedCurrent;
                    d.retained = l.retained;
                    d.substationID = l.substationID;

                    foreach (Substation s in Singleton.Instance().Substations)
                    {
                        if (s.mRID.Equals(d.substationID))
                        {
                            s.VoltageLevels[0].Equipments.Add(d);
                            break;
                        }
                    }

                    break;
                }
            }

            return d;
        }
    }//end Disconnector

}//end namespace Wires