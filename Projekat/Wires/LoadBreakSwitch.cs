///////////////////////////////////////////////////////////
//  LoadBreakSwitch.cs
//  Implementation of the Class LoadBreakSwitch
//  Generated by Enterprise Architect
//  Created on:      09-Jul-2016 12:00:50 AM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using CIM.IEC61970.Base.Wires;
using Projekat;
using CIM.IEC61970.Base.Core;

namespace CIM.IEC61970.Base.Wires {
	/// <summary>
	/// A mechanical switching device capable of making, carrying, and breaking
	/// currents under normal operating conditions.
	/// </summary>
	public class LoadBreakSwitch : ProtectedSwitch, IPrototype {

        public string substationID
        {
            get; set;
        }
        
		public LoadBreakSwitch(){

		}

        public LoadBreakSwitch(string id)
        {
            this.mRID = id;
        }

		~LoadBreakSwitch(){

		}

        public object Clone()
        {
            LoadBreakSwitch lbs = new LoadBreakSwitch();

            foreach (LoadBreakSwitch l in Singleton.Instance().LoadBreakers)
            {
                if (l.mRID.Equals(this.mRID))
                {
                    lbs.aliasName = l.aliasName;
                    lbs.description = "clone_" + l.mRID;
                    lbs.mRID = Guid.NewGuid().ToString().Substring(0, 8);
                    lbs.name = l.name;
                    lbs.normalOpen = l.normalOpen;
                    lbs.open = l.open;
                    lbs.ratedCurrent = l.ratedCurrent;
                    lbs.retained = l.retained;
                    lbs.substationID = l.substationID;

                    foreach (Substation s in Singleton.Instance().Substations)
                    {
                        if (s.mRID.Equals(lbs.substationID))
                        {
                            s.VoltageLevels[0].Equipments.Add(lbs);
                        }
                    }

                    break;
                }
            }

            return lbs;
        }
    }//end LoadBreakSwitch

}//end namespace Wires