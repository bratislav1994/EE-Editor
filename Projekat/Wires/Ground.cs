///////////////////////////////////////////////////////////
//  Ground.cs
//  Implementation of the Class Ground
//  Generated by Enterprise Architect
//  Created on:      09-Jul-2016 12:00:50 AM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using CIM.IEC61970.Base.Core;
using Projekat;

namespace CIM.IEC61970.Base.Wires {
	/// <summary>
	/// A point where the system is grounded used for connecting conducting equipment
	/// to ground. The power system model can have any number of grounds.
	/// </summary>
	public class Ground : ConductingEquipment, IPrototype {

        public string substationID
        {
            get; set;
        }

		public Ground(){

		}

        public Ground(string id)
        {
            this.mRID = id;
        }

		~Ground(){

		}

        public object Clone()
        {
            Ground g = new Ground();

            foreach (Ground l in Singleton.Instance().Ground)
            {
                if (l.mRID.Equals(this.mRID))
                {
                    g.aliasName = l.aliasName;
                    g.description = "clone_" + l.mRID;
                    g.name = l.name;
                    g.substationID = l.substationID;

                    foreach (Substation s in Singleton.Instance().Substations)
                    {
                        if (s.mRID.Equals(g.substationID))
                        {
                            s.VoltageLevels[0].Equipments.Add(g);
                            break;
                        }
                    }

                    break;
                }
            }

            return g;
        }
    }//end Ground

}//end namespace Wires