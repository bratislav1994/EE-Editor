///////////////////////////////////////////////////////////
//  Switch.cs
//  Implementation of the Class Switch
//  Generated by Enterprise Architect
//  Created on:      09-Jul-2016 12:00:50 AM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using CIM.IEC61970.Base.Core;
namespace CIM.IEC61970.Base.Wires {
	/// <summary>
	/// A generic device designed to close, or open, or both, one or more electric
	/// circuits.  All switches are two terminal devices including grounding switches.
	/// </summary>
	public class Switch : ConductingEquipment {

		/// <summary>
		/// The attribute is used in cases when no Measurement for the status value is
		/// present. If the Switch has a status measurement the Discrete.normalValue is
		/// expected to match with the Switch.normalOpen.
		/// </summary>
		public bool normalOpen
        { get; set; }
		/// <summary>
		/// The attribute tells if the switch is considered open when used as input to
		/// topology processing.
		/// </summary>
		public bool open { get; set; }
        /// <summary>
        /// The maximum continuous current carrying capacity in amps governed by the device
        /// material and construction.
        /// </summary>
        public float ratedCurrent { get; set; }
        /// <summary>
        /// Branch is retained in a bus branch model.  The flow through retained switches
        /// will normally be calculated in power flow.
        /// </summary>
        public bool retained { get; set; }

        public Switch(){

		}

		~Switch(){

		}

	}//end Switch

}//end namespace Wires